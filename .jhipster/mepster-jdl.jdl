
application {
  config {
    baseName mepster,
    applicationType monolith,
    packageName org.freeteratec.mepster,
    buildTool gradle,
    cacheProvider ehcache,
    authenticationType jwt,
    clientFramework vue,
    clientPackageManager npm,
    databaseType sql,
    devDatabaseType postgresql,
    prodDatabaseType postgresql,
    enableHibernateCache true,
    enableSwaggerCodegen true,
    enableTranslation true,
    languages [en,de,pl],
    nativeLanguage en,
    testFrameworks [cypress],
    serverPort 8080,
  }
  entities *
  dto * with mapstruct
}


entity Organization(organization) {
  name String required minlength(2) maxlength(50)
  street String maxlength(50)
  number String maxlength(10)
  city String maxlength(20) pattern(/^[A-Z][A-Za-z/-]*$/)
  zipcode String maxlength(8) pattern(/^[0-9]{5}$/)
  country String maxlength(20) pattern(/^[A-Za-z-]*$/)
  phoneNumber String maxlength(30) pattern(/^[0-9 +-]*$/)
  email String maxlength(50) pattern(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/)
  website String maxlength(50) pattern(/^https?:\/\/[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/)
  notes TextBlob
}

entity Person(person) {
  firstname String required minlength(2) maxlength(50)
  lastname String required minlength(2) maxlength(50)
  type String
  lead String
  phoneNumber String maxlength(30) pattern(/^[0-9 +-]*$/)
  email String maxlength(30) pattern(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/)
  notes TextBlob
}

entity Role(role) {
  title String required minlength(2) maxlength(40)
}

entity Project(project) {
  title String required minlength(2) maxlength(100)
  description TextBlob
  startDate LocalDate
  endDate LocalDate
  isActive Boolean required
  chancePercent Integer min(0) max(100)
  notes TextBlob
}

entity ProjectPosition(project_position) {
  title String required minlength(2) maxlength(100)
  description TextBlob
  startDate LocalDate
  endDate LocalDate
  percent Integer min(0) max(100)
}

entity Skill(skill) {
  title String required minlength(2) maxlength(30)
  description TextBlob
}

entity MonthlyProjectPositionAssignment(monthly_position_assignment) {
  yearmonth LocalDate
  percent Integer min(0) max(100)
  isActive Boolean required
}

entity MonthlyAvailability(monthly_availability) {
  yearmonth LocalDate
  percent Integer min(0) max(100)
  isActive Boolean required
}


relationship OneToMany {
  Organization{persons(lastname)} to Person{organization(name)}
  Organization{projects(title)} to Project{organization(name) required}
  Organization{subOrganizations(name)} to Organization{parentOrganization(name)}
  Project{projectPositions(title)} to ProjectPosition{project(title) required}
}

relationship ManyToOne {
  MonthlyProjectPositionAssignment{projectPosition(title) required} to ProjectPosition{monthlyAssignments(yearmonth)}
  MonthlyProjectPositionAssignment{person(lastname) required} to Person{monthlyAssignments(yearmonth)}
  MonthlyAvailability{person(lastname) required} to Person{monthlyAvailabilities(yearmonth)}
  ProjectPosition{role(title) required} to Role{projectPosition(title)}
}

relationship ManyToMany {
  ProjectPosition{skills(title)} to Skill{projectPositions(title)}
  Person{skills(title)} to Skill{persons(lastname)}
  Person{roles(title)} to Role{persons(lastname)}
}
